-- Load the DrRay library from the GitHub repository Library
local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()

-- Create a new window and set its title and theme
local window = DrRayLibrary:Load("Remedy | Mobile", "Default")

-- Create the Aim tab
local tab1 = DrRayLibrary.newTab("Aim", "ImageIdHere")

-- Initialize aimbot settings
local aimbotEnabled = false

-- Add Aimbot toggle to the Aim tab
tab1.newToggle("Enable Aimbot", "Enable or disable aimbot", false, function(state)
    aimbotEnabled = state
end)

-- Create a mobile-friendly aimbot toggle button
local screenGui = Instance.new("ScreenGui", game.Players.LocalPlayer.PlayerGui)
local aimbotToggleButton = Instance.new("TextButton")

aimbotToggleButton.Size = UDim2.new(0, 200, 0, 50)
aimbotToggleButton.Position = UDim2.new(0.5, -100, 1, -60) -- Centered at the bottom of the screen
aimbotToggleButton.Text = "Toggle Aimbot"
aimbotToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
aimbotToggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
aimbotToggleButton.BackgroundTransparency = 0.5
aimbotToggleButton.Font = Enum.Font.SourceSans
aimbotToggleButton.TextSize = 24
aimbotToggleButton.Parent = screenGui

-- Function to toggle the aimbot
local function toggleAimbot()
    aimbotEnabled = not aimbotEnabled
    if aimbotEnabled then
        aimbotToggleButton.Text = "Aimbot Enabled"
        print("Aimbot Enabled")
    else
        aimbotToggleButton.Text = "Toggle Aimbot"
        print("Aimbot Disabled")
    end
end

-- Connect the button click to the toggle function
aimbotToggleButton.MouseButton1Click:Connect(toggleAimbot)

-- Check if the target is visible using raycasting
local function IsVisible(targetPart)
    local origin = game.Workspace.CurrentCamera.CFrame.Position
    local direction = (targetPart.Position - origin).Unit * (targetPart.Position - origin).Magnitude
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {game.Players.LocalPlayer.Character} -- Ignore local player
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    local ray = game.Workspace:Raycast(origin, direction, raycastParams)
    return ray == nil -- If no obstruction, target is visible
end

-- Detect Right-Click Hold
local UserInputService = game:GetService('UserInputService')
local rightClickHeld = false

UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        rightClickHeld = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        rightClickHeld = false
    end
end)

-- Aimbot Logic (with Visibility, and Right Click)
local function Aimbot()
    if not aimbotEnabled or not rightClickHeld then return end

    local camera = game.Workspace.CurrentCamera
    local localPlayer = game.Players.LocalPlayer
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= localPlayer and player.Team ~= localPlayer.Team and player.Character and player.Character:FindFirstChild('Humanoid') and player.Character.Humanoid.Health > 0 then
            local targetPart = player.Character:FindFirstChild("HumanoidRootPart")
            if targetPart and IsVisible(targetPart) then
                local playerPos = targetPart.Position
                local screenPoint, onScreen = camera:WorldToViewportPoint(playerPos)

                if onScreen then
                    local distance = (Vector2.new(screenPoint.X, screenPoint.Y) - Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)).Magnitude
                    if distance < shortestDistance then
                        shortestDistance = distance
                        closestPlayer = player
                    end
                end
            end
        end
    end

    if closestPlayer then
        local targetPosition = closestPlayer.Character.HumanoidRootPart.Position
        local currentPosition = camera.CFrame.Position
        local targetCFrame = CFrame.new(currentPosition, targetPosition)
        camera.CFrame = CFrame.new(currentPosition:Lerp(targetCFrame.Position, 0.1), targetPosition) -- Adjust smoothness if needed
    end
end

game:GetService('RunService').RenderStepped:Connect(Aimbot)
